/****************************************************************************
* Title                 :   adc_config
* Filename              :   adc_config.h
* Author                :   Sijeo Philip
* Origin Date           :   23/03/2020
* Version               :   1.0.0
* Compiler              :   mspx_eabi
* Target                :   MSP430FR6989
* Notes                 :   This module is used to set the configurations of ADC to be used in application
*
* THIS SOFTWARE IS PROVIDED BY UNISEM ELECTRONICS "AS IS" AND ANY EXPRESSED
* OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL UNISEM ELECTRONICS OR ITS CONTRIBUTORS BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGE.
*
*****************************************************************************/
/*************** INTERFACE CHANGE LIST **************************************
*
*    Date    Version   Author         Description
*  23/03/20   1.0.0    Sijeo Philip   Interface Created.
*
*****************************************************************************/
/** @file adc_config.h
 *  @brief This module is used to configure the ADC to be used in the application
 *
 *  This is the header file for the definition of configuration parameters for the
 *  ADC peripheral
 */
//TODO: UPDATE MACRO BELOW
#ifndef ADC_CONFIG_H_
#define ADC_CONFIG_H_

/******************************************************************************
* Includes
*******************************************************************************/


/******************************************************************************
* Preprocessor Constants
*******************************************************************************/

/******************************************************************************
* Configuration Constants
*******************************************************************************/
/**
 * @brief This bits are used to set the sample and hold time for registers
 * ADC12MEM8 to ADC12MEM23 (can be modified when ADC12ENC = 0)
 * <0x0000=>    4 ADC12CLK cycles
 * <0x1000=>    8 ADC12CLK cycles
 * <0x2000=>    16 ADC12CLK cycles
 * <0x3000=>    32 ADC12CLK cycles
 * <0x4000=>    64 ADC12CLK cycles
 * <0x5000=>    96 ADC12CLK cycles
 * <0x6000=>    128 ADC12CLK cycles
 * <0x7000=>    192 ADC12CLK cycles
 * <0x8000=>    256 ADC12CLK cycles
 * <0x9000=>    384 ADC12CLK cycles
 * <0xA000=>    512 ADC12CLK cycles
 * <0xB000 to 0xF000=>    Reserved
 *
 */
#ifndef CONF_ADC12CTL0_ADC12SHT1
#define CONF_ADC12CTL0_ADC12SHT1    0x8000
#endif

/**
 * @brief This bits are used to set the sample and hold time for registers
 * ADC12MEM0 to ADC12MEM7 (can be modified when ADC12ENC = 0)
 * <0x0000=>    4 ADC12CLK cycles
 * <0x0100=>    8 ADC12CLK cycles
 * <0x0200=>    16 ADC12CLK cycles
 * <0x0300=>    32 ADC12CLK cycles
 * <0x0400=>    64 ADC12CLK cycles
 * <0x0500=>    96 ADC12CLK cycles
 * <0x0600=>    128 ADC12CLK cycles
 * <0x0700=>    192 ADC12CLK cycles
 * <0x0800=>    256 ADC12CLK cycles
 * <0x0900=>    384 ADC12CLK cycles
 * <0x0A00=>    512 ADC12CLK cycles
 * <0x0B00 to 0x0F00=>    Reserved
 *
 */
#ifndef CONF_ADC12CTL0_ADC12SHT0
#define CONF_ADC12CTL0_ADC12SHT0    0x0800
#endif

/**
 * @brief This bit is used to Enable/Disable Multiple Sample and Conversion
 * Valid for sequence or repeated modes(can be modified when ADC12ENC = 0)
 * <0x0000=> Disable the Multiple Sample and Conversion
 * <0x0080=> Enable  the Multiple Sample and Conversion
 */
#ifndef CONF_ADC12CTL0_ADC12MSC
#define CONF_ADC12CTL0_ADC12MSC     0x0000
#endif
/******************************************************************************
* Macros
*******************************************************************************/

/******************************************************************************
* Typedefs
*******************************************************************************/


/******************************************************************************
* Variables
*******************************************************************************/


/******************************************************************************
* Function Prototypes
*******************************************************************************/

#endif /*ADC_CONFIG_H_*/

/*** End of File **************************************************************/
