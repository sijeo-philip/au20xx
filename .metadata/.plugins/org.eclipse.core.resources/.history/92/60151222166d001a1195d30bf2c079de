/*******************************************************************************
* Title                 :   hal_timerA
* Filename              :   hal_timerA.c
* Author                :   Sijeo Philip
* Origin Date           :   23/03/2020
* Version               :   1.0.0
* Compiler              :   mspx_eabi
* Target                :   MSP430FR6989
* Notes                 :   This module is used to intialize and load the timer value
*
* THIS SOFTWARE IS PROVIDED BY UNISEM ELECTRONICS "AS IS" AND ANY EXPRESSED
* OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL UNISEM ELECTRONICS OR ITS CONTRIBUTORS BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGE.
*
*******************************************************************************/
/*************** SOURCE REVISION LOG *****************************************
*
*    Date    Version   Author         Description
*  23/03/15   1.0.0    Sijeo Philip   Initial Release.
*
*******************************************************************************/
/** @file hal_timerA.c
 *  @brief This is the source file for Initializing the Timer and reloading
 *  value if needed
 */
/******************************************************************************
* Includes
*******************************************************************************/
#include <stdint.h>             /* For portable types */

//TODO: UPDATE MY INCLUDE
#include "hal_timerA.h"             /* For timer intializing */
#include "msp430.h"
/******************************************************************************
* Module Preprocessor Constants
*******************************************************************************/
/**
 * AU20xx Timer Value for 1ms Interrupt
 */
#define   AU20xx_TIMER_COMP_VAL             50  /**<< The clock source is selected
                                                      as SMCLK i.e. 1MHz, the ID is
                                                      selected as divide by 4 and
                                                      TAxEX0 is selected as divide
                                                      by 5 */

/******************************************************************************
* Module Preprocessor Macros
*******************************************************************************/

/******************************************************************************
* Module Typedefs
*******************************************************************************/

/******************************************************************************
* Module Variable Definitions
*******************************************************************************/

/******************************************************************************
* Function Prototypes
*******************************************************************************/

/******************************************************************************
* Function Definitions
*******************************************************************************/
/******************************************************************************
* Function : timerA_init()
*//**
* \b Description:
*
* This function is used to initialize the timerA which is used for sensor measurement
* interval as per the configurations defined in the timerA_config.h file.
*
* PRE-CONDITION: The clocks should be intialized
*
* POST-CONDITION: The Intialized timer will be in running mode
*
* @return       None
*
* \b Example Example:
* @code
*
*   timerA_init();
* @endcode
*
* @see system_clk_init()
*
* <br><b> - HISTORY OF CHANGES - </b>
*
* <table align="left" style="width:800px">
* <tr><td> Date       </td><td> Software Version </td><td> Initials </td><td> Description </td></tr>
* <tr><td> 23/03/2020 </td><td> 0.5.0            </td><td> SP      </td><td> Interface Created </td></tr>
* </table><br><br>
* <hr>
*
*******************************************************************************/
void timerA_init( void )
{
    AU20xx_CAP_COMP_REG(0) = AU20xx_TIMER_COMP_VAL * 2; /**<< For minimum interval of 2ms*/
    AU20xx_TIMER_CTRL_REG(0) |= CONF_TACTL0_ID | CONF_TACTL0_TASSEL;
    AU20xx_TIMER_EXP_REG(0) = CONF_TAEX0_TAIDEX;
    TIMERA_CLR(0);
    AU20xx_TIMER_CTRL_REG(0) |= CONF_TACTL0_MC | CONF_TACTL0_TAIE;
    AU20xx_CAP_COMP_CTRL_REG(0) |= CONF_TACCTL0_OUT | CONF_TACCTL0_CCIE |
                                   CONF_TACCTL0_OUTMOD | CONF_TACCTL0_CAP |
                                   CONF_TACCTL0_SCS | CONF_TACCTL0_CCIS |
                                   CONF_TACCTL0_CM;
}

/*************** END OF FUNCTIONS ***************************************************************************/
